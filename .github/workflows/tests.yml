name: tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [8.4]
        stability: [prefer-stable]

    name: PHP ${{ matrix.php }} - ${{ matrix.stability }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl
          coverage: none
          tools: composer:v2

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit

  coverage:
    runs-on: ubuntu-latest
    name: Test Coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: intl, xdebug
          coverage: xdebug
          tools: composer:v2

      - name: Install dependencies
        run: composer update --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Execute tests with coverage
        run: |
          mkdir -p build/logs
          XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover build/logs/clover.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./build/logs/clover.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Extract coverage percentage
        id: extract_coverage
        run: |
          COVERAGE=$(grep -Po '<coverage[^>]*line-rate="([^"]+)"' build/logs/clover.xml | grep -Po 'line-rate="([^"]+)"' | grep -Po '[0-9\.]+')
          PERCENTAGE=$(echo "$COVERAGE * 100" | bc -l | xargs printf "%.2f")
          echo "percentage=$PERCENTAGE" >> $GITHUB_OUTPUT
          echo "Coverage percentage: $PERCENTAGE%"
      
      - name: Determine badge color
        id: badge_color
        run: |
          PERCENTAGE=${{ steps.extract_coverage.outputs.percentage }}
          if (( $(echo "$PERCENTAGE >= 90" | bc -l) )); then
            COLOR="brightgreen"
          elif (( $(echo "$PERCENTAGE >= 80" | bc -l) )); then
            COLOR="green"
          elif (( $(echo "$PERCENTAGE >= 70" | bc -l) )); then
            COLOR="yellowgreen"
          elif (( $(echo "$PERCENTAGE >= 60" | bc -l) )); then
            COLOR="yellow"
          elif (( $(echo "$PERCENTAGE >= 50" | bc -l) )); then
            COLOR="orange"
          else
            COLOR="red"
          fi
          echo "color=$COLOR" >> $GITHUB_OUTPUT
          echo "Badge color: $COLOR"
      
      - name: Create coverage badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.GIST_ID }}
          filename: polyglot-coverage.json
          label: coverage
          message: ${{ steps.extract_coverage.outputs.percentage }}%
          color: ${{ steps.badge_color.outputs.color }}
